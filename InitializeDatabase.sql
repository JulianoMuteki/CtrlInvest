CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "AspNetRoles" (
    "Id" uuid NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetUsers" (
    "Id" uuid NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);

CREATE TABLE "Banks" (
    "BankID" uuid NOT NULL,
    "Name" character varying(250) NOT NULL,
    "BankBalance" numeric(10,2) NOT NULL,
    "BankCode" integer NOT NULL,
    "InitialBalance" numeric(10,2) NOT NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "BankID" PRIMARY KEY ("BankID")
);

CREATE TABLE "Tickets" (
    "Id" uuid NOT NULL,
    "Ticker" character varying(150) NOT NULL,
    "Name" character varying(150) NOT NULL,
    "Exchange" character varying(50) NOT NULL,
    "Country" character varying(50) NOT NULL,
    "Currency" character varying(50) NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "PK_Tickets" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" uuid NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" uuid NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" uuid NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserRoles" (
    "UserId" uuid NOT NULL,
    "RoleId" uuid NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserTokens" (
    "UserId" uuid NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "HistoricalDates" (
    "Date" timestamp without time zone NOT NULL,
    "TickerCode" character varying(150) NOT NULL,
    "Open" double precision NOT NULL,
    "High" double precision NOT NULL,
    "Low" double precision NOT NULL,
    "Close" double precision NOT NULL,
    "AdjClose" double precision NOT NULL,
    "Volume" integer NOT NULL,
    "TickerID" uuid NOT NULL,
    CONSTRAINT "PK_HistoricalDates" PRIMARY KEY ("Date", "TickerCode"),
    CONSTRAINT "FK_HistoricalDates_Tickets_TickerID" FOREIGN KEY ("TickerID") REFERENCES "Tickets" ("Id") ON DELETE CASCADE
);

CREATE TABLE "FinancialTransactions" (
    "FinancialTransactionID" uuid NOT NULL,
    "Description" character varying(250) NOT NULL,
    "Value" numeric(10,2) NOT NULL,
    "PaymentDate" timestamp without time zone NULL,
    "IsOperationDone" boolean NOT NULL,
    "ETransactionType" integer NOT NULL,
    "EPaymentMethod" integer NOT NULL,
    "BankID" uuid NOT NULL,
    "ChildTreeID" uuid NOT NULL,
    "ParentTreeID" uuid NOT NULL,
    "GrandChildTreeID" uuid NOT NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "FinancialTransactionID" PRIMARY KEY ("FinancialTransactionID"),
    CONSTRAINT "FK_FinancialTransactions_Banks_BankID" FOREIGN KEY ("BankID") REFERENCES "Banks" ("BankID") ON DELETE CASCADE
);

CREATE TABLE "GrandChildrenTrees" (
    "GrandChildTreeID" uuid NOT NULL,
    "Title" character varying(250) NOT NULL,
    "Description" text NULL,
    "Tag" text NULL,
    "LevelTree" integer NOT NULL,
    "ParentNodeID" uuid NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "GrandChildTreeID" PRIMARY KEY ("GrandChildTreeID")
);

CREATE TABLE "ParentsTrees" (
    "ParentTreeID" uuid NOT NULL,
    "Title" character varying(250) NOT NULL,
    "Description" text NULL,
    "Tag" text NULL,
    "LevelTree" integer NOT NULL,
    "ParentNodeID" uuid NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "ParentTreeID" PRIMARY KEY ("ParentTreeID"),
    CONSTRAINT "FK_ParentsTrees_GrandChildrenTrees_ParentNodeID" FOREIGN KEY ("ParentNodeID") REFERENCES "GrandChildrenTrees" ("GrandChildTreeID") ON DELETE RESTRICT
);

CREATE TABLE "ChildrenTrees" (
    "ChildTreeID" uuid NOT NULL,
    "Title" character varying(250) NOT NULL,
    "Description" text NULL,
    "Tag" text NULL,
    "LevelTree" integer NOT NULL,
    "ParentNodeID" uuid NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "ChildTreeID" PRIMARY KEY ("ChildTreeID"),
    CONSTRAINT "FK_ChildrenTrees_ParentsTrees_ParentNodeID" FOREIGN KEY ("ParentNodeID") REFERENCES "ParentsTrees" ("ParentTreeID") ON DELETE RESTRICT
);

CREATE TABLE "Leaves" (
    "LeafID" uuid NOT NULL,
    "CompositeID" uuid NOT NULL,
    "Title" character varying(250) NOT NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "LeafID" PRIMARY KEY ("LeafID")
);

CREATE TABLE "Composites" (
    "CompositeID" uuid NOT NULL,
    "Title" character varying(250) NOT NULL,
    "LeafParentID" uuid NULL,
    "CreationDate" timestamp without time zone NOT NULL,
    "DateModified" timestamp without time zone NOT NULL,
    "IsDelete" boolean NOT NULL,
    "IsDisable" boolean NOT NULL,
    CONSTRAINT "CompositeID" PRIMARY KEY ("CompositeID"),
    CONSTRAINT "FK_Composites_Leaves_LeafParentID" FOREIGN KEY ("LeafParentID") REFERENCES "Leaves" ("LeafID") ON DELETE RESTRICT
);

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_ChildrenTrees_ParentNodeID" ON "ChildrenTrees" ("ParentNodeID");

CREATE INDEX "IX_Composites_LeafParentID" ON "Composites" ("LeafParentID");

CREATE INDEX "IX_FinancialTransactions_BankID" ON "FinancialTransactions" ("BankID");

CREATE INDEX "IX_FinancialTransactions_ChildTreeID" ON "FinancialTransactions" ("ChildTreeID");

CREATE INDEX "IX_FinancialTransactions_GrandChildTreeID" ON "FinancialTransactions" ("GrandChildTreeID");

CREATE INDEX "IX_FinancialTransactions_ParentTreeID" ON "FinancialTransactions" ("ParentTreeID");

CREATE INDEX "IX_GrandChildrenTrees_ParentNodeID" ON "GrandChildrenTrees" ("ParentNodeID");

CREATE INDEX "IX_HistoricalDates_TickerID" ON "HistoricalDates" ("TickerID");

CREATE INDEX "IX_Leaves_CompositeID" ON "Leaves" ("CompositeID");

CREATE INDEX "IX_ParentsTrees_ParentNodeID" ON "ParentsTrees" ("ParentNodeID");

ALTER TABLE "FinancialTransactions" ADD CONSTRAINT "FK_FinancialTransactions_ChildrenTrees_ChildTreeID" FOREIGN KEY ("ChildTreeID") REFERENCES "ChildrenTrees" ("ChildTreeID") ON DELETE CASCADE;

ALTER TABLE "FinancialTransactions" ADD CONSTRAINT "FK_FinancialTransactions_GrandChildrenTrees_GrandChildTreeID" FOREIGN KEY ("GrandChildTreeID") REFERENCES "GrandChildrenTrees" ("GrandChildTreeID") ON DELETE CASCADE;

ALTER TABLE "FinancialTransactions" ADD CONSTRAINT "FK_FinancialTransactions_ParentsTrees_ParentTreeID" FOREIGN KEY ("ParentTreeID") REFERENCES "ParentsTrees" ("ParentTreeID") ON DELETE CASCADE;

ALTER TABLE "GrandChildrenTrees" ADD CONSTRAINT "FK_GrandChildrenTrees_ChildrenTrees_ParentNodeID" FOREIGN KEY ("ParentNodeID") REFERENCES "ChildrenTrees" ("ChildTreeID") ON DELETE RESTRICT;

ALTER TABLE "Leaves" ADD CONSTRAINT "FK_Leaves_Composites_CompositeID" FOREIGN KEY ("CompositeID") REFERENCES "Composites" ("CompositeID") ON DELETE CASCADE;

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20211030202418_InitialCreate', '5.0.11');

CREATE EXTENSION IF NOT EXISTS "uuid - ossp";
COMMIT;

