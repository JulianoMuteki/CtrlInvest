version: '3'

services:
  ctrl-invest-api:
    image: ctrl-invest:latest
    container_name: "ctrl-invest-app-${ENVIRONMENT}"    
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "8003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PORT=8003
      - ElasticConfiguration__Uri=http://172.17.0.1:9200
      - HealthChecksUI__HealthChecks__0__Uri=http://172.17.0.1:8003/health
      - Jwt__Key=NEWKEY123456
      - TokenConfiguration__Audience=Pestili_Audience
      - TokenConfiguration__Issuer=Pestili_Issuer
      - TokenConfiguration__ExpireHours=2
      - EmailSettings__Mail=julian@julian.com.br
      - EmailSettings__DisplayName=Juliano
      - EmailSettings__Password=password
      - EmailSettings__Host=smtp.mail.yahoo.com
      - EmailSettings__Port=587
      - ConnectionStrings__DefaultConnection=User ID =postgres;Password=${DATABASE_DEFAULT_PASSWORD};Server=ctrl-invest-db;Port=5432;Database=ctrl-invest-db-${ENVIRONMENT};Integrated Security=true;Pooling=true;
    networks:
      - ctrl-invest-network
      - ctrl-apps-network   
    links:
      - ctrl-invest-db
    depends_on:
      ctrl-invest-db:
        condition: service_healthy
  ctrl-invest-db:
    image: postgres:latest
    container_name: "ctrl-invest-db-${ENVIRONMENT}"
    restart: always
    ports:
      - "15433:5432"
    volumes: 
      - /home/juliano/volume-db-data/ctrlinvest:/var/lib/postgresql/data      
    environment:
      POSTGRES_DB: "ctrl-invest-db-${ENVIRONMENT}"
      POSTGRES_PASSWORD: "${DATABASE_DEFAULT_PASSWORD}"
    networks:
      - ctrl-invest-network      
    healthcheck:
      test: "pg_isready -q -U postgres"
networks:
  ctrl-invest-network:
    external: true
  ctrl-apps-network:
    external: true